@tailwind base;
@tailwind components;
@tailwind utilities;

*:not([class]):not([id]):not([style]) > svg:not([id]) {
 @apply w-5;
}

* {
 @apply border-gray-400;
}

.rounded-shadow {
 @apply rounded-lg bg-white shadow-sm;
}
.position-x-center {
 @apply left-1/2  transform -translate-x-1/2;
}
.position-y-center {
 @apply top-1/2 transform -translate-y-1/2;
}
.position-center {
 @apply position-x-center position-y-center;
}

.absolute-center {
 @apply absolute   position-center;
}

.showOnly {
 @apply opacity-50 pointer-events-none;
}

@layer base {
 .center-x {
  @apply left-1/2  transform -translate-x-1/2;
 }
 .center-y {
  @apply top-1/2 transform -translate-y-1/2;
 }
 .modal-overlay {
  @apply fixed  min-h-screen bg-black opacity-80 [width:100vw] [height:100vh];
 }

 .t-paper {
  @apply rounded-lg p-1 shadow-sm bg-white;
 }

 .col-stack {
  @apply flex flex-col gap-2;
 }
 .row-stack {
  @apply flex flex-row items-center flex-wrap gap-3;
  &.breadcrumbs {
   span:not(:last-child) {
    &::after {
     content: " >";
    }
   }
  }
 }

 .columns-responsive {
  @apply columns-1 sm:columns-2 md:columns-3 xl:columns-4;
 }
 .text-responsive {
  @apply text-[11px] lg:text-[12px]  xl:text-[15px];
 }
 .w-responsive {
  @apply w-full sm:w-1/2 md:w-1/3 lg:w-1/4;
 }

 .AlignJustCenter {
  @apply flex  justify-center  items-center;
 }
 .t-heading {
  @apply font-bold  my-1 text-lg;
 }
 .t-bg-heading {
  @apply text-2xl font-bold bg-primary-main  p-2 my-2 text-center;
 }
 .disabled {
  @apply cursor-not-allowed opacity-70 pointer-events-none;
 }
 button {
  &:disabled {
   @apply cursor-not-allowed opacity-30;
  }
 }
 .t-btn {
  @apply px-2 py-0.5  text-white bg-sub-main  rounded-md w-fit  cursor-pointer onHover;

  &:disabled {
   @apply cursor-not-allowed opacity-30;
  }
  &:hover {
   box-shadow:
    0 1px 10px rgba(0, 0, 0, 0.4),
    0 0 50px rgba(128, 128, 128, 0.1);
   border-color: transparent;
  }
 }

 .icon-btn {
  @apply AlignJustCenter p-0.5 px-1  cursor-pointer bg-gray-100 text-sm text-sub-main rounded-sm font-bold shadow-md;
 }

 .t-badge {
  @apply rounded-sm p-1 text-[8px] bg-sub-light font-bold shadow;
 }
 .t-badge-rounded {
  @apply AlignJustCenter h-5 w-5 rounded-full  bg-sub-main text-white text-xs shadow mx-auto;
 }

 .t-alert {
  @apply p-1  rounded border-red-400 bg-red-100   shadow;
 }
 .t-alert-primary {
  @apply t-alert bg-primary-light border-primary-main;
 }
 .t-alert-success {
  @apply t-alert bg-success-light border-success-main;
 }
 .t-alert-warning {
  @apply t-alert  bg-warning-light border-warning-main;
 }
 .t-alert-blue {
  @apply t-alert  bg-blue-50 border-blue-main;
 }
 .t-alert-sub {
  @apply t-alert  bg-gray-100 border-sub-main;
 }

 .t-link {
  text-decoration: underline;
  text-underline-offset: 4px;
  color: rgb(36, 142, 255);
  cursor: pointer;
 }

 .detectHover {
  @apply onHover;
  &:hover {
   box-shadow: 0 1px 10px rgba(64, 64, 64, 0.4);
   border-color: transparent;
  }
 }

 .onHover {
  @apply cursor-pointer  ease-out  duration-200 transition-all hover:opacity-50;
 }

 .formBackGround {
  @apply cursor-pointer;
  @apply rounded-sm  hover:ring-2;

  &.disabled {
   @apply cursor-not-allowed pointer-events-none bg-white;
  }
  &:not(.disabled) {
   @apply bg-[#ededed];
  }
 }

 .ring-blue {
  @apply border-gray-300 border-2  focus:border-blue-500   hover:border-blue-500 focus:bg-blue-main/10  hover:bg-blue-main/10;
 }

 .myFormControl {
  @apply w-full  px-2  rounded  outline-none transition-all ring-blue;
  // &.empty {
  //  @apply bg-gray-200;
  // }

  &.errorFormControl {
   @apply bg-error-main/20 border-error-main;
  }

  font-size: 18px !important;

  &[disabled] {
   @apply bg-[#ededed] cursor-not-allowed;
  }
 }
}

.controlBorderClass {
 @apply border-primary-light;
}

.overlay {
 @apply fixed inset-0 bg-black opacity-70;
}
.scaleOnHover {
 &:hover {
  @apply opacity-100 scale-[150%] z-10;
 }
 @apply duration-200;
}
