@layer components {
 .myRadio {
  label {
   cursor: pointer;
   position: relative;
   margin-left: 10px;
   padding-left: 50px;
  }

  label::before,
  label::after {
   background-color: #ddd;
   border-radius: 50%;
   transition: 0.3s;
   transform: translateY(-50%);
   top: 50%;
   left: 0px;
  }

  label::before {
   background-color: #fff;
   border-radius: 10px;
   border: 1px solid #ddd;
   height: 20px;
   width: 40px;
   left: 5px;
  }

  label::after {
   background-color: #ddd;
   border-radius: 50%;
   opacity: 1;
   height: 22px;
   width: 22px;
   left: 0px;
  }

  input:checked + label::before {
   background-color: #73e600;
  }

  input:checked + label::after {
   left: 27px;
  }
 }
 .myFormControl {
  display: block;
  width: 100%;
  background-color: var(--color-gray-100);
  padding-top: 0.3rem; /* p-1 */
  padding-bottom: 0.3rem;
  padding-left: 0.5rem; /* px-2 */
  padding-right: 0.5rem;
  border-bottom-width: 1.5px;
  border-color: var(--color-gray-300);
  line-height: 1.5rem; /* smの行間も合わせるなら */
  font-size: 18px !important;
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);

  &:required {
   &:placeholder-shown {
    background-color: var(--color-red-100) !important;
    border-color: var(--color-red-500) !important;
   }
  }

  &:hover {
   cursor: text;

   border-color: var(--color-blue-600) !important;
   background-color: var(--color-blue-50) !important;
  }

  &:disabled {
   border: none;
   background-color: var(--color-gray-200) !important;
   cursor: not-allowed;
   opacity: 0.7;
  }
 }

 .myFormControl-test {
  width: 100%;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  border-radius: 0.25rem;
  outline: none;
  transition-property: all;
  border-color: var(--color-gray-300);
  border-width: 2px;
  &:focus {
   border-color: var(--color-blue-500);
   background-color: rgba(var(--color-blue-main), 0.1);
  }
  &:hover {
   border-color: var(--color-blue-500);
   background-color: rgba(var(--color-blue-main), 0.1);
  }

  &.errorFormControl {
   background-color: rgba(var(--color-error-main), 0.2);
   border-color: var(--color-error-main);
  }

  font-size: 18px !important;

  &[disabled] {
   background-color: #ededed;
   cursor: not-allowed;
  }
 }

 // テーブル
 .sticky-table-wrapper {
  padding: 0;
  border-radius: 0.5rem;

  overflow: auto;
  white-space: normal;

  table {
   width: 100%;
   border-collapse: collapse;
   font-size: 15px;

   thead,
   tfoot {
    position: sticky;
    z-index: 100;
    top: 0;
   }

   td {
    border-bottom-width: 0.5px;
    border-left-width: 0;
    border-right-width: 0;
    border-color: var(--color-gray-400);
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    padding-top: 0.625rem;
    padding-bottom: 0.625rem;
   }

   th {
    border-bottom-width: 0.5px;
    border-left-width: 0;
    border-right-width: 0;
    border-color: var(--color-gray-400);
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    padding-top: 0.625rem;
    padding-bottom: 0.625rem;
    color: var(--color-gray-600);
    font-weight: bolder;
    text-align: start;
   }

   thead {
    th,
    td {
     background-color: #f8f8f8;

     color: var(--color-gray-800);
     border-color: var(--color-gray-500);
     border-bottom-width: 1px;
     border-left-width: 0;
     border-right-width: 0;
    }
   }

   tbody {
    tr {
     th:first-child {
      padding-right: 0 !important;
      position: sticky;
      z-index: 100;
      left: 0;
      z-index: 10;
      border-right: 1px dotted #c8c8c8;
     }
    }
   }

   tfoot {
    z-index: 100;
    position: sticky;
    bottom: 0;
   }
  }
 }

 .roundedTr {
  font: fallback;

  td:first-child,
  th:first-child {
   border-radius: 5px 0 0 5px;
   border-left-width: 1px;
  }

  td:last-child,
  th:last-child {
   border-radius: 0 5px 5px 0;
   border-right-width: 1px;
  }

  th,
  td {
   border-top-width: 1px;
  }

  box-shadow: var(--shadow-md);
  border-width: 1px;
  border-radius: 10px;
 }

 .t-paper {
  box-shadow: var(--shadow-lg);
  border-width: 1px;
  border-color: var(--color-gray-200) !important;
  background: var(--color-white);
  padding: 0.25rem;
  border-radius: var(--radius-lg);
 }

 .col-stack {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
 }
 .row-stack {
  display: flex;
  flex-direction: row;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.75rem;
  &.breadcrumbs {
   span:not(:last-child) {
    &::after {
     content: " >";
    }
   }
  }
 }

 .columns-responsive {
  columns: 1;
  @media (min-width: var(--screen-sm)) {
   columns: 2;
  }
  @media (min-width: var(--screen-md)) {
   columns: 3;
  }
  @media (min-width: var(--screen-xl)) {
   columns: 4;
  }
 }
 .text-responsive {
  font-size: 11px;
  @media (min-width: var(--screen-lg)) {
   font-size: 12px;
  }
  @media (min-width: var(--screen-xl)) {
   font-size: 15px;
  }
 }
 .w-responsive {
  width: 100%;
  @media (min-width: var(--screen-sm)) {
   width: 50%;
  }
  @media (min-width: var(--screen-md)) {
   width: 33.333333%;
  }
  @media (min-width: var(--screen-lg)) {
   width: 25%;
  }
 }

 .alignJustCenter {
  display: flex;
  justify-content: center;
  align-items: center;
 }
 .t-heading {
  font-weight: var(--font-weight-bold);
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
  font-size: var(--font-size-lg);
 }
 .t-bg-heading {
  font-size: var(--font-size-2xl);
  font-weight: var(--font-weight-bold);
  background-color: var(--color-primary-main);
  padding: 0.5rem;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  text-align: center;
 }
 .disabled {
  cursor: not-allowed;
  opacity: 0.7;
  pointer-events: none;
 }
 button {
  &:disabled {
   cursor: not-allowed;
   opacity: 0.3;
  }
 }
 .t-btn {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
  color: white;
  background-color: var(--color-sub-main);
  border-radius: var(--radius-md);
  width: fit-content;
  cursor: pointer;
  transition-property: all;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;

  &:disabled {
   cursor: not-allowed;
   opacity: 0.3;
  }
  &:hover {
   opacity: 0.5;
   box-shadow:
    0 1px 10px rgba(0, 0, 0, 0.4),
    0 0 50px rgba(128, 128, 128, 0.1);
   border-color: transparent;
  }
 }

 .icon-btn {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.125rem;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  cursor: pointer;
  background-color: var(--color-gray-100);
  font-size: var(--font-size-sm);
  color: var(--color-sub-main);
  border-radius: 0.125rem;
  font-weight: var(--font-weight-bold);
  box-shadow: var(--shadow-md);
 }

 .t-alert {
  padding: 0.4rem;
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-DEFAULT);
 }
 .t-alert-primary {
  padding: 0.25rem;
  border-radius: 0.25rem;
  background-color: var(--color-primary-light);
  border-color: var(--color-primary-main);
  box-shadow: var(--shadow-DEFAULT);
 }
 .t-alert-success {
  padding: 0.25rem;
  border-radius: 0.25rem;
  background-color: var(--color-success-light);
  border-color: var(--color-success-main);
  box-shadow: var(--shadow-DEFAULT);
 }
 .t-alert-warning {
  padding: 0.25rem;
  border-radius: 0.25rem;
  background-color: var(--color-warning-light);
  border-color: var(--color-warning-main);
  box-shadow: var(--shadow-DEFAULT);
 }
 .t-alert-blue {
  padding: 0.25rem;
  border-radius: 0.25rem;
  background-color: var(--color-blue-50);
  border-color: var(--color-blue-main);
  box-shadow: var(--shadow-DEFAULT);
 }
 .t-alert-sub {
  padding: 0.25rem;
  border-radius: 0.25rem;
  background-color: var(--color-gray-100);
  border-color: var(--color-sub-main);
  box-shadow: var(--shadow-DEFAULT);
 }

 .t-link {
  text-decoration: underline;
  text-underline-offset: 4px;
  color: rgb(36, 142, 255);
  cursor: pointer;
 }

 .onHover {
  cursor: pointer;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  transition-property: all;
  &:hover {
   opacity: 0.5;
  }
 }

 .ring-blue {
  border-color: var(--color-gray-300);
  border-width: 2px;
  &:focus {
   border-color: var(--color-blue-500);
   background-color: rgba(var(--color-blue-main), 0.1);
  }
  &:hover {
   border-color: var(--color-blue-500);
   background-color: rgba(var(--color-blue-main), 0.1);
  }
 }

 .overlay {
  position: fixed;
  inset: 0;
  background-color: black;
  opacity: 0.4;
 }

 .scaleOnHover {
  &:hover {
   opacity: 1;
   transform: scale(1.5);
   z-index: 10;
  }
  transition-duration: 200ms;
 }

 .vertical {
  writing-mode: vertical-lr;
  text-align: center;
  // width: 20px;
 }

 //QRシート
 .qr-sheet {
  table {
   border: 1px solid var(--color-sub-main);

   white-space: normal;
   td:nth-child(odd) {
    background-color: var(--color-sub-light);
   }
  }
 }

 // リチャーツ
 .recharts-tooltip-wrapper {
  background-color: var(--color-gray-50);
  box-shadow: var(--shadow-lg);
 }

 //リアクトマークダウン
 .react-markdown {
  h1 {
   font-size: 1.5rem;
   font-weight: 700;
  }
  h2 {
   font-size: 1.25rem;
   font-weight: 700;
  }
  h3 {
   font-size: 1.125rem;
   font-weight: 700;
  }
  ol li {
   list-style-type: decimal;
  }
  ul li {
   list-style-type: disc;
  }
  li {
   margin-left: 40px;
  }
  a {
   text-underline-offset: 4px;
   color: rgb(36, 142, 255);
   cursor: pointer;
  }
 }

 // ドロワーアニメーション
 .drawer {
  position: fixed;
  left: -100%;
  top: 0;
  width: 80vw;
  max-width: 300px;
  height: 100vh;
  overflow-x: hidden;
  transition: left 0.2s ease-in-out;
  z-index: 9999;
  &.open {
   left: 0;
  }
 }

 .bg-gold {
  background-color: gold;
 }

 .bg-silver {
  background-color: silver;
 }

 .bg-bronze {
  background-color: brown;
 }

 .absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
 }

 .showOnly {
  opacity: 0.5;
  pointer-events: none;
 }

 .center-x {
  left: 50%;
  transform: translateX(-50%);
 }
 .center-y {
  top: 50%;
  transform: translateY(-50%);
 }

 .center-x-y {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
 }
}
