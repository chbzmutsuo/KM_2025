model TbmBase {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  code String? @unique
  name String  @unique

  User                User[]
  TbmVehicle          TbmVehicle[]
  TbmRouteGroup       TbmRouteGroup[]
  TbmDriveSchedule    TbmDriveSchedule[]
  // TbmProduct          TbmProduct[]
  TbmCustomer         TbmCustomer[]
  TbmBase_MonthConfig TbmBase_MonthConfig[]
  TbmKeihi            TbmKeihi[]
  TbmRouteGroupShare  TbmRouteGroupShare[]
}

model TbmRouteGroupCalendar {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  date        DateTime
  holidayType String?  @default("")
  remark      String?

  TbmRouteGroup   TbmRouteGroup @relation(fields: [tbmRouteGroupId], references: [id], onDelete: Cascade)
  tbmRouteGroupId Int

  @@unique([tbmRouteGroupId, date], name: "unique_tbmRouteGroupId_date")
}

model TbmKeihi {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)
  item      String?
  amount    Float?
  date      DateTime?
  remark    String?

  TbmBase   TbmBase @relation(fields: [tbmBaseId], references: [id], onDelete: Cascade)
  tbmBaseId Int
}

model TbmDriveScheduleImage {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  imageUrl String

  TbmDriveSchedule   TbmDriveSchedule? @relation(fields: [tbmDriveScheduleId], references: [id])
  tbmDriveScheduleId Int?
}

model TbmBase_MonthConfig {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  code      String?
  yearMonth DateTime

  keiyuPerLiter    Float?
  gasolinePerLiter Float?

  TbmBase   TbmBase @relation(fields: [tbmBaseId], references: [id], onDelete: Cascade)
  tbmBaseId Int

  @@unique([tbmBaseId, yearMonth], name: "unique_tbmBaseId_yearMonth")
}

model TbmVehicle {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  code String? @unique

  name          String?
  frameNo       String? @unique
  vehicleNumber String  @unique
  type          String?
  shape         String?
  airSuspension String?
  oilTireParts  String?
  maintenance   String?
  insurance     String?

  shodoTorokubi DateTime?
  sakenManryobi DateTime?
  hokenManryobi DateTime?

  sankagetsuTenkenbi DateTime?
  sokoKyori          Float?

  // 保険情報
  jibaisekiHokenCompany String? // 自賠責保険会社
  jibaisekiManryobi     DateTime? // 自賠責満期日

  jidoshaHokenCompany String? // 自動車保険会社（対人、対物）
  jidoshaManryobi     DateTime? // 自動車保険満期日

  kamotsuHokenCompany String? // 貨物保険会社
  kamotsuManryobi     DateTime? // 貨物保険満期日

  sharyoHokenCompany String? // 車両保険会社
  sharyoManryobi     DateTime? // 車両保険満期日

  // ETCカード情報
  etcCardNumber     String? // ETCカード番号
  etcCardExpiration DateTime? // ETCカード有効期限

  TbmFuelCard TbmFuelCard[]

  TbmRefuelHistory  TbmRefuelHistory[]
  TbmBase           TbmBase             @relation(fields: [tbmBaseId], references: [id], onDelete: Cascade)
  tbmBaseId         Int
  TbmDriveSchedule  TbmDriveSchedule[]
  OdometerInput     OdometerInput[]
  TbmCarWashHistory TbmCarWashHistory[]

  // User   User? @relation(fields: [userId], references: [id])
  // userId Int?  @unique

  TbmVehicleMaintenanceRecord TbmVehicleMaintenanceRecord[]
  TbmEtcMeisai                TbmEtcMeisai[]
  EtcCsvRaw                   EtcCsvRaw[]
  User                        User[]

  @@unique([tbmBaseId, vehicleNumber], name: "unique_tbmBaseId_vehicleNumber")
}

model TbmFuelCard {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  name      String
  startDate DateTime @default(now())
  endDate   DateTime @default(now())

  TbmVehicle   TbmVehicle? @relation(fields: [tbmVehicleId], references: [id])
  tbmVehicleId Int?
}

// 1台ごとに、「日付、件名、金額、依頼先、備考」からなる整備記録の履歴を管理可能
model TbmVehicleMaintenanceRecord {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  date       DateTime //日付
  title      String // 件名
  price      Float // 金額
  contractor String? // 依頼先事業者
  remark     String? // 備考
  type       String? // 3ヶ月点検・車検・その他

  TbmVehicle   TbmVehicle? @relation(fields: [tbmVehicleId], references: [id])
  tbmVehicleId Int?
}

model TbmRouteGroup {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  code      String? @unique
  name      String
  routeName String?

  serviceNumber    String? // 服務番号
  departureTime    String? // 出発時刻（4桁文字列: HHMM）
  finalArrivalTime String? // 最終到着時刻（4桁文字列: HHMM）
  allowDuplicate   Boolean @default(false) // 重複許可

  pickupTime  String? //接車時間
  vehicleType String? //車z種

  productName String?

  seikyuKbn String? @default("01")

  // 便共有機能のためのフィールド
  isShared Boolean @default(false) // この便が共有されているかどうか

  TbmBase   TbmBase @relation(fields: [tbmBaseId], references: [id], onDelete: Cascade)
  tbmBaseId Int

  TbmDriveSchedule TbmDriveSchedule[]

  TbmMonthlyConfigForRouteGroup TbmMonthlyConfigForRouteGroup[]
  // Mid_TbmRouteGroup_TbmProduct  Mid_TbmRouteGroup_TbmProduct?

  Mid_TbmRouteGroup_TbmCustomer Mid_TbmRouteGroup_TbmCustomer?
  TbmRouteGroupCalendar         TbmRouteGroupCalendar[]

  TbmRouteGroupFee   TbmRouteGroupFee[]
  TbmRouteGroupShare TbmRouteGroupShare[]

  @@unique([tbmBaseId, code], name: "unique_tbmBaseId_code")
}

model TbmRouteGroupFee {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  startDate DateTime

  driverFee Int?
  futaiFee  Int?

  TbmRouteGroup   TbmRouteGroup @relation(fields: [tbmRouteGroupId], references: [id], onDelete: Cascade)
  tbmRouteGroupId Int
}

model TbmMonthlyConfigForRouteGroup {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  yearMonth DateTime

  generalFee         Int? //通行量（一般）[]
  tsukoryoSeikyuGaku Int? //通行料請求額
  seikyuKaisu        Int? //請求回数

  numberOfTrips   Int?
  TbmRouteGroup   TbmRouteGroup @relation(fields: [tbmRouteGroupId], references: [id], onDelete: Cascade)
  tbmRouteGroupId Int

  @@unique([yearMonth, tbmRouteGroupId], name: "unique_yearMonth_tbmRouteGroupId")
}

// model TbmProduct {
//  id                           Int                            @id @default(autoincrement())
//  createdAt                    DateTime                       @default(now())
//  updatedAt                    DateTime?                      @default(now()) @updatedAt()
//  sortOrder                    Float                          @default(0)
//  code                         String                         @unique
//  name                         String                         @unique
//  Mid_TbmRouteGroup_TbmProduct Mid_TbmRouteGroup_TbmProduct[]
//  TbmBase                      TbmBase                        @relation(fields: [tbmBaseId], references: [id], onDelete: Cascade)
//  tbmBaseId                    Int

//  @@unique([tbmBaseId, name], name: "unique_tbmBaseId_name")
// }

// model Mid_TbmRouteGroup_TbmProduct {
//  id        Int       @id @default(autoincrement())
//  createdAt DateTime  @default(now())
//  updatedAt DateTime? @default(now()) @updatedAt()
//  sortOrder Float     @default(0)

// TbmRouteGroup   TbmRouteGroup @relation(fields: [tbmRouteGroupId], references: [id], onDelete: Cascade)
//  tbmRouteGroupId Int           @unique

//  TbmProduct   TbmProduct @relation(fields: [tbmProductId], references: [id], onDelete: Cascade)
//  tbmProductId Int

//  @@unique([tbmRouteGroupId, tbmProductId], name: "unique_tbmRouteGroupId_tbmProductId")
// }

model Mid_TbmRouteGroup_TbmCustomer {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  TbmRouteGroup   TbmRouteGroup @relation(fields: [tbmRouteGroupId], references: [id], onDelete: Cascade)
  tbmRouteGroupId Int           @unique

  TbmCustomer   TbmCustomer @relation(fields: [tbmCustomerId], references: [id], onDelete: Cascade)
  tbmCustomerId Int

  @@unique([tbmRouteGroupId, tbmCustomerId], name: "unique_tbmRouteGroupId_tbmCustomerId")
}

model TbmBillingAddress {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  name String
}

model TbmInvoiceDetail {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  numberOfTrips   Int
  fare            Float
  toll            Float
  specialAddition Float? // 特別付加金
}

model TbmCustomer {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  code                          String?                         @unique
  name                          String                          @unique
  address                       String?
  phoneNumber                   String?
  faxNumber                     String?
  bankInformation               String?
  Mid_TbmRouteGroup_TbmCustomer Mid_TbmRouteGroup_TbmCustomer[]

  TbmBase   TbmBase? @relation(fields: [tbmBaseId], references: [id], onDelete: Cascade)
  tbmBaseId Int?

  @@unique([tbmBaseId, name], name: "unique_tbmBaseId_name")
}

model TbmRefuelHistory {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  date     DateTime
  amount   Float
  odometer Float
  type     String

  // TbmOperationGroup TbmOperationGroup? @relation(fields: [tbmOperationGroupId], references: [id], onDelete: Cascade)
  // tbmOperationGroupId Int?

  TbmVehicle   TbmVehicle @relation(fields: [tbmVehicleId], references: [id], onDelete: Cascade)
  tbmVehicleId Int

  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model TbmCarWashHistory {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  date  DateTime
  price Float

  TbmVehicle   TbmVehicle @relation(fields: [tbmVehicleId], references: [id], onDelete: Cascade)
  tbmVehicleId Int

  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model TbmDriveSchedule {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  date                DateTime
  remark              String? // 配車カード備考
  O_postalHighwayFee  Int? //高速(郵便)
  Q_generalHighwayFee Int? //高速（一般）

  User   User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int?

  TbmVehicle   TbmVehicle? @relation(fields: [tbmVehicleId], references: [id], onDelete: Cascade)
  tbmVehicleId Int?

  TbmRouteGroup   TbmRouteGroup @relation(fields: [tbmRouteGroupId], references: [id], onDelete: Cascade)
  tbmRouteGroupId Int

  finished  Boolean? @default(false)
  confirmed Boolean? @default(false)
  approved  Boolean? @default(false)

  TbmBase   TbmBase @relation(fields: [tbmBaseId], references: [id], onDelete: Cascade)
  tbmBaseId Int

  // 1対多の関係に変更
  TbmEtcMeisai          TbmEtcMeisai[]
  TbmDriveScheduleImage TbmDriveScheduleImage[]
}

model TbmEtcMeisai {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  groupIndex Int
  month      DateTime

  info Json[]

  sum Float

  TbmVehicle   TbmVehicle? @relation(fields: [tbmVehicleId], references: [id], onDelete: Cascade)
  tbmVehicleId Int?

  // 1対多の関係に変更
  TbmDriveSchedule   TbmDriveSchedule? @relation(fields: [tbmDriveScheduleId], references: [id], onDelete: Cascade)
  tbmDriveScheduleId Int?

  EtcCsvRaw EtcCsvRaw[]

  @@index([tbmVehicleId])
}

model EtcCsvRaw {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  // 利用年月日（自）と時分（自）
  fromDate DateTime
  fromTime String

  // 利用年月日（至）と時分（至）
  toDate DateTime
  toTime String

  // 利用IC
  fromIc String
  toIc   String

  // 料金情報
  originalFee    Float? // 割引前料金
  discountAmount Float? // ETC割引額
  fee            Float // 通行料金
  totalAmount    Float? // 合計金額

  // グルーピングフラグ
  isGrouped Boolean @default(false)

  remark     String? // 備考
  cardNumber String? // ETCカード番号
  carType    String? // 車種

  // 関連
  TbmVehicle   TbmVehicle @relation(fields: [tbmVehicleId], references: [id], onDelete: Cascade)
  tbmVehicleId Int

  // グルーピングされた場合の関連
  TbmEtcMeisai   TbmEtcMeisai? @relation(fields: [tbmEtcMeisaiId], references: [id])
  tbmEtcMeisaiId Int?

  @@unique([tbmVehicleId, fromDate, fromTime], name: "unique_tbmVehicleId_fromDate_fromTime")
  @@index([tbmVehicleId])
}

model OdometerInput {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  odometerStart Float
  odometerEnd   Float
  date          DateTime

  TbmVehicle   TbmVehicle @relation(fields: [tbmVehicleId], references: [id], onDelete: Cascade)
  tbmVehicleId Int

  User   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([tbmVehicleId, date], name: "unique_tbmVehicleId_date")
}

model UserWorkStatus {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  date       DateTime
  workStatus String?
  remark     String?

  // 時間データ（分単位で保存）
  vehicleNumber    String?
  startTime        String?
  endTime          String?
  kyukeiMins       String?
  shinyaKyukeiMins String?
  kyusokuMins      String?

  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  @@unique([userId, date], name: "unique_userId_date")
}

model KyuyoTableRecord {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  other1      Float?
  other2      Float?
  shokuhi     Float?
  maebaraikin Float?
  rate        Float? @default(0.5)

  yearMonth DateTime
  User      User     @relation(fields: [userId], references: [id])
  userId    Int

  @@unique([userId, yearMonth], name: "unique_userId_yearMonth")
}

// 便共有機能のためのテーブル
model TbmRouteGroupShare {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()
  sortOrder Float     @default(0)

  // 共有元の便
  TbmRouteGroup   TbmRouteGroup @relation(fields: [tbmRouteGroupId], references: [id], onDelete: Cascade)
  tbmRouteGroupId Int

  // 共有先の営業所
  TbmBase   TbmBase @relation(fields: [tbmBaseId], references: [id], onDelete: Cascade)
  tbmBaseId Int

  // 共有状態のフラグ（将来的に承認プロセスなどを追加する場合に使用）
  isActive Boolean @default(true)

  @@unique([tbmRouteGroupId, tbmBaseId], name: "unique_tbmRouteGroupId_tbmBaseId")
}
