model PrefCity {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)
 pref      String
 city      String
 Genba     Genba[]

 @@unique([pref, city], name: "unique_pref_city")
}

// sohken
model Genba {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 name             String?
 defaultStartTime String? //はやで、おそで、15分遅出など
 construction     String? //建築

 houseHoldsCount1 Int?
 houseHoldsCount2 Int?
 houseHoldsCount3 Int?
 houseHoldsCount4 Int?
 houseHoldsCount5 Int?
 houseHoldsCount6 Int?
 houseHoldsCount7 Int?

 zip          String?
 state        String?
 city         String?
 addressLine1 String?
 addressLine2 String?

 PrefCity   PrefCity? @relation(fields: [prefCityId], references: [id])
 prefCityId Int?

 GenbaDayShift     GenbaDayShift[]
 GenbaDay          GenbaDay[]
 GenbaDaySoukenCar GenbaDaySoukenCar[]

 GenbaTask GenbaTask[]
}

model SohkenCar {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 name  String?
 plate String?
 role  String?

 GenbaDaySoukenCar GenbaDaySoukenCar[]
 User              User?               @relation(fields: [userId], references: [id], onDelete: Cascade)
 userId            Int?
}

model GenbaDay {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 date    DateTime
 subTask String?
 remarks String?
 Genba   Genba?   @relation(fields: [genbaId], references: [id], onDelete: Cascade)
 ninku   Float?

 finished Boolean? @default(false)
 active   Boolean? @default(true)
 status   String?

 ninkuFullfilled             Boolean? @default(false)
 allRequiredNinku            Int?
 allAssignedNinkuTillThisDay Int?

 genbaId       Int?
 GenbaDayShift GenbaDayShift[]

 GenbaDaySoukenCar GenbaDaySoukenCar[]

 GenbaDayTaskMidTable GenbaDayTaskMidTable[]

 @@unique([date, genbaId], name: "unique_date_genbaId")
}

model GenbaTask {
 id            Int       @id @default(autoincrement())
 createdAt     DateTime  @default(now())
 updatedAt     DateTime? @default(now()) @updatedAt()
 sortOrder     Float     @default(0)
 name          String?
 color         String?
 from          DateTime?
 to            DateTime?
 requiredNinku Float?
 // status        String?

 Genba                Genba                  @relation(fields: [genbaId], references: [id])
 genbaId              Int
 GenbaDayTaskMidTable GenbaDayTaskMidTable[]

 @@unique([name, genbaId], name: "unique_name_genbaId")
}

model GenbaDayTaskMidTable {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 GenbaDay   GenbaDay @relation(fields: [genbaDayId], references: [id], onDelete: Cascade)
 genbaDayId Int

 GenbaTask   GenbaTask @relation(fields: [genbaTaskId], references: [id], onDelete: Cascade)
 genbaTaskId Int

 @@unique([genbaDayId, genbaTaskId], name: "unique_genbaDayId_genbaTaskId")
}

model GenbaDaySoukenCar {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 GenbaDay   GenbaDay @relation(fields: [genbaDayId], references: [id], onDelete: Cascade)
 genbaDayId Int

 SohkenCar   SohkenCar @relation(fields: [sohkenCarId], references: [id], onDelete: Cascade)
 sohkenCarId Int

 Genba   Genba @relation(fields: [genbaId], references: [id], onDelete: Cascade)
 genbaId Int
}

model GenbaDayShift {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 date         DateTime?
 from         String? // 08:00
 to           String? // 08:00
 important    Boolean?  @default(false)
 directReturn Boolean?  @default(false)

 User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
 userId Int

 GenbaDay   GenbaDay @relation(fields: [genbaDayId], references: [id], onDelete: Cascade)
 genbaDayId Int

 Genba   Genba @relation(fields: [genbaId], references: [id], onDelete: Cascade)
 genbaId Int

 @@unique([userId, genbaDayId], name: "unique_userId_genbaDayId")
}

model GenbaTaskMaster {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 name  String
 color String
}
