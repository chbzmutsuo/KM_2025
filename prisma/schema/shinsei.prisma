// 商品マスターテーブル
model Product {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)
 code      String?   @unique
 name      String?
 // maker     String?
 // unit      String?

 // リレーション
 PurchaseRequest PurchaseRequest[]
 ShiireSaki      ShiireSaki        @relation(fields: [shiireSakiId], references: [id], onDelete: Cascade)
 shiireSakiId    Int
}

model ShiireSaki {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 code String @unique
 name String

 email String?

 Product Product[]
}

// 発注履歴テーブル
model PurchaseRequest {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 purchaseType    String // 新規/折損/リピート
 quantity        Int
 reason          String
 result          String?
 approverComment String?
 trashed         Boolean @default(false)

 emailSentAt DateTime?

 // リレーション
 Approval  Approval[]
 User      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
 userId    Int
 Product   Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
 productId Int
}

// 休暇申請履歴テーブル
model LeaveRequest {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 from      DateTime
 to        DateTime
 leaveType String // 1日/年休休/午後休/特別休暇/慶弔休暇/産前産後休暇/代休/欠勤/早退/遅刻
 reason    String

 // リレーション
 Approval Approval[]
 User     User       @relation(fields: [userId], references: [id], onDelete: Cascade)
 userId   Int
}

// 承認テーブル
model Approval {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 index      Int
 type       String // 発注/休暇
 status     String // 承認/却下
 notifiedAt DateTime?
 comment    String?

 // 発注申請の承認
 PurchaseRequest   PurchaseRequest? @relation(fields: [purchaseRequestId], references: [id], onDelete: Cascade)
 purchaseRequestId Int?

 // 休暇申請の承認
 LeaveRequest   LeaveRequest? @relation(fields: [leaveRequestId], references: [id], onDelete: Cascade)
 leaveRequestId Int?

 User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
 userId Int

 @@unique([purchaseRequestId, index, userId], name: "purchaseRequestApproval")
 @@unique([leaveRequestId, index, userId], name: "leaveRequestApproval")
}
