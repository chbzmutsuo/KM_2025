model Tokens {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 name      String    @unique
 token     String
 expiresAt DateTime?
}

// Sara App - おうちスタンプラリーアプリ

model Family {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 name String

 Parent   Parent[]
 Child    Child[]
 Activity Activity[]
}

model Parent {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 name     String
 email    String @unique
 password String
 type     String @default("parent") // parent, guardian

 Family   Family @relation(fields: [familyId], references: [id], onDelete: Cascade)
 familyId Int

 ActivityEvaluationRequest ActivityEvaluationRequest[] @relation("ApprovedBy")
}

model Child {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 name     String
 password String?
 avatar   String? // アバター画像URL
 type     String  @default("child") // child, guardian

 Family   Family @relation(fields: [familyId], references: [id], onDelete: Cascade)
 familyId Int

 ActivityEvaluationRequest ActivityEvaluationRequest[]
}

model Activity {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 title       String
 description String?
 order       Int     @default(0)
 active      Boolean @default(true)

 Family   Family @relation(fields: [familyId], references: [id], onDelete: Cascade)
 familyId Int

 ActivityScore             ActivityScore[]
 ActivityEvaluationRequest ActivityEvaluationRequest[]
}

model ActivityScore {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 score             Int
 title             String
 description       String?
 iconUrl           String?
 achievementImgUrl String?
 animationLevel    String  @default("light") // light, medium, heavy

 Activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
 activityId Int

 ActivityEvaluationRequest ActivityEvaluationRequest[]
}

model ActivityEvaluationRequest {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 sortOrder Float     @default(0)

 date          DateTime @default(now())
 status        String   @default("pending") // pending, approved, rejected
 comment       String?
 openedByChild Boolean  @default(false)

 Child   Child @relation(fields: [childId], references: [id], onDelete: Cascade)
 childId Int

 Activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
 activityId Int

 ActivityScore   ActivityScore @relation(fields: [activityScoreId], references: [id], onDelete: Cascade)
 activityScoreId Int

 Parent   Parent? @relation("ApprovedBy", fields: [parentId], references: [id])
 parentId Int?

 @@unique([childId, activityId, date], name: "child_item_date_unique")
}
