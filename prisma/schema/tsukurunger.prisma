model TsMainContractor {
 id             Int              @id @default(autoincrement())
 createdAt      DateTime         @default(now())
 updatedAt      DateTime?        @default(now()) @updatedAt()
 active         Boolean          @default(true)
 sortOrder      Float            @default(0)
 name           String           @unique
 TsConstruction TsConstruction[]
}

model TsConstruction {
 id             Int       @id @default(autoincrement())
 createdAt      DateTime  @default(now())
 updatedAt      DateTime? @default(now()) @updatedAt()
 active         Boolean   @default(true)
 sortOrder      Float     @default(0)
 name           String    @unique
 address1       String?
 address2       String?
 contractAmount Float?
 budget         Float?

 TsMainContractor   TsMainContractor? @relation(fields: [tsMainContractorId], references: [id], onDelete: Cascade)
 tsMainContractorId Int?

 TsNippo                          TsNippo[]
 TsWorkContent                    TsWorkContent[]
 TsMaterial                       TsMaterial[]
 TsConstructionDiscount           TsConstructionDiscount[]
 TsConstructionSubConUserMidTable TsConstructionSubConUserMidTable[]
}

model TsConstructionSubConUserMidTable {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 active    Boolean   @default(true)
 sortOrder Float     @default(0)

 User                 User           @relation(fields: [userId], references: [id], onDelete: Cascade)
 userId               Int
 TsConstructionSubCon TsConstruction @relation(fields: [tsConstructionId], references: [id], onDelete: Cascade)
 tsConstructionId     Int

 @@unique([userId, tsConstructionId], name: "unique_userId_tsConstructionId")
}

model TsNippo {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 active    Boolean   @default(true)
 sortOrder Float     @default(0)

 totalCost Float?

 date             DateTime        @default(now())
 TsConstruction   TsConstruction? @relation(fields: [tsConstructionId], references: [id], onDelete: Cascade)
 tsConstructionId Int?

 MidTsNippoUser                   MidTsNippoUser[]
 MidTsNippoTsRegularSubcontractor MidTsNippoTsRegularSubcontractor[]
 MidTsNippoTsSubcontractor        MidTsNippoTsSubcontractor[]
 MidTsNippoTsMachinery            MidTsNippoTsMachinery[]
 MidTsNippoTsMaterial             MidTsNippoTsMaterial[]
 MidTsNippoTsWorkContent          MidTsNippoTsWorkContent[]
 TsNippoRemarks                   TsNippoRemarks[]
 TsNippMannualWorkContent         TsNippMannualWorkContent[]

 @@unique([date, tsConstructionId], name: "unique_date_tsConstructionId")
}

model TsNippoRemarks {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 active    Boolean   @default(true)
 sortOrder Float     @default(0)
 name      String?
 price     Int?
 TsNippo   TsNippo?  @relation(fields: [tsNippoId], references: [id], onDelete: Cascade)
 tsNippoId Int?
}

model TsNippMannualWorkContent {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 active    Boolean   @default(true)
 sortOrder Float     @default(0)
 part      String?
 name      String?
 count     Int?
 unit      String?
 price     Int
 TsNippo   TsNippo?  @relation(fields: [tsNippoId], references: [id], onDelete: Cascade)
 tsNippoId Int?
}

model TsRegularSubcontractor {
 id          Int       @id @default(autoincrement())
 createdAt   DateTime  @default(now())
 updatedAt   DateTime? @default(now()) @updatedAt()
 active      Boolean   @default(true)
 sortOrder   Float     @default(0)
 name        String    @unique
 contentName String?
 unitPrice   Int?
 remarks     String?

 MidTsNippoTsRegularSubcontractor MidTsNippoTsRegularSubcontractor[]

 @@unique([contentName, name], name: "unique_contentName_name")
}

model TsSubcontractor {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 active    Boolean   @default(true)
 sortOrder Float     @default(0)
 name      String    @unique
 unitPrice Int?
 remarks   String?

 MidTsNippoTsSubcontractor MidTsNippoTsSubcontractor[]
}

model TsMachinery {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 active    Boolean   @default(true)
 sortOrder Float     @default(0)
 name      String    @unique
 unitPrice Int?
 unit      String?
 vendor    String?
 remarks   String?

 MidTsNippoTsMachinery MidTsNippoTsMachinery[]

 @@unique([name, vendor], name: "unique_name_vendor")
}

model TsMaterial {
 id           Int       @id @default(autoincrement())
 createdAt    DateTime  @default(now())
 updatedAt    DateTime? @default(now()) @updatedAt()
 active       Boolean   @default(true)
 sortOrder    Float     @default(0)
 materialType String?
 name         String
 vehicle      String?
 category     String?
 unitPrice    Int?
 unit         String?
 vendor       String?
 remarks      String?
 billedAt     DateTime?
 genbaName    String?

 TsConstruction   TsConstruction? @relation(fields: [tsConstructionId], references: [id], onDelete: Cascade)
 tsConstructionId Int?

 MidTsNippoTsMaterial MidTsNippoTsMaterial[]

 // @@unique([materialType, name], name: "unique_material")
}

model TsWorkContent {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 active    Boolean   @default(true)
 sortOrder Float     @default(0)

 part           String?
 name           String?
 unit           String?
 contractAmount Float?
 unitPrice      Int?
 remarks        String?

 TsConstruction          TsConstruction            @relation(fields: [tsConstructionId], references: [id], onDelete: Cascade)
 tsConstructionId        Int
 MidTsNippoTsWorkContent MidTsNippoTsWorkContent[]
}

//中間テーブル

model MidTsNippoTsWorkContent {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 active    Boolean   @default(true)
 sortOrder Float     @default(0)
 count     Float     @default(0)
 price     Float     @default(0)
 tsNippoId Int

 TsNippo       TsNippo       @relation(fields: [tsNippoId], references: [id], onDelete: Cascade)
 TsWorkContent TsWorkContent @relation(fields: [tsWorkContentId], references: [id], onDelete: Cascade)

 tsWorkContentId Int

 // @@unique([tsNippoId, tsWorkContentId], name: "unique_tsNippoId_tsWorkContentId")
}

model MidTsNippoUser {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 active    Boolean   @default(true)
 sortOrder Float     @default(0)
 count     Float     @default(0)
 price     Float     @default(0)
 tsNippoId Int
 userId    Int

 TsNippo TsNippo @relation(fields: [tsNippoId], references: [id], onDelete: Cascade)
 User    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

 // @@unique([tsNippoId, userId], name: "unique_tsNippoId_userId")
}

model MidTsNippoTsRegularSubcontractor {
 id                       Int       @id @default(autoincrement())
 createdAt                DateTime  @default(now())
 updatedAt                DateTime? @default(now()) @updatedAt()
 active                   Boolean   @default(true)
 sortOrder                Float     @default(0)
 count                    Float     @default(0)
 price                    Float     @default(0)
 tsNippoId                Int
 tsRegularSubcontractorId Int

 TsNippo                TsNippo                @relation(fields: [tsNippoId], references: [id], onDelete: Cascade)
 TsRegularSubcontractor TsRegularSubcontractor @relation(fields: [tsRegularSubcontractorId], references: [id], onDelete: Cascade)

 // @@unique([tsNippoId, tsRegularSubcontractorId], name: "unique_tsNippoId_tsRegularSubcontractorId")
}

model MidTsNippoTsSubcontractor {
 id                Int             @id @default(autoincrement())
 createdAt         DateTime        @default(now())
 updatedAt         DateTime?       @default(now()) @updatedAt()
 active            Boolean         @default(true)
 sortOrder         Float           @default(0)
 count             Float           @default(0)
 price             Float           @default(0)
 tsNippoId         Int
 tsSubcontractorId Int
 TsNippo           TsNippo         @relation(fields: [tsNippoId], references: [id], onDelete: Cascade)
 TsSubcontractor   TsSubcontractor @relation(fields: [tsSubcontractorId], references: [id], onDelete: Cascade)

 // @@unique([tsNippoId, tsSubcontractorId], name: "unique_tsNippoId_tsSubcontractorId")
}

model MidTsNippoTsMachinery {
 id            Int       @id @default(autoincrement())
 createdAt     DateTime  @default(now())
 updatedAt     DateTime? @default(now()) @updatedAt()
 active        Boolean   @default(true)
 sortOrder     Float     @default(0)
 count         Float     @default(0)
 price         Float     @default(0)
 tsNippoId     Int
 tsMachineryId Int

 TsNippo     TsNippo     @relation(fields: [tsNippoId], references: [id], onDelete: Cascade)
 TsMachinery TsMachinery @relation(fields: [tsMachineryId], references: [id], onDelete: Cascade)

 // @@unique([tsNippoId, tsMachineryId], name: "unique_tsNippoId_tsMachineryId")
}

model MidTsNippoTsMaterial {
 id           Int       @id @default(autoincrement())
 createdAt    DateTime  @default(now())
 updatedAt    DateTime? @default(now()) @updatedAt()
 active       Boolean   @default(true)
 sortOrder    Float     @default(0)
 count        Float     @default(0)
 price        Float     @default(0)
 tsNippoId    Int
 tsMaterialId Int

 TsNippo    TsNippo    @relation(fields: [tsNippoId], references: [id], onDelete: Cascade)
 TsMaterial TsMaterial @relation(fields: [tsMaterialId], references: [id], onDelete: Cascade)

 // @@unique([tsNippoId, tsMaterialId], name: "unique_tsNippoId_tsMaterialId")
}

model TsConstructionDiscount {
 id        Int       @id @default(autoincrement())
 createdAt DateTime  @default(now())
 updatedAt DateTime? @default(now()) @updatedAt()
 active    Boolean   @default(true)
 sortOrder Float     @default(0)

 monthStr String
 price    Float

 TsConstruction   TsConstruction @relation(fields: [tsConstructionId], references: [id], onDelete: Cascade)
 tsConstructionId Int

 @@unique([monthStr, tsConstructionId], name: "unique_monthStr_tsConstructionId")
}
